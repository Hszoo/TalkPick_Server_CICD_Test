name: TalkPick-Server CI/CD

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Create .env file
        run: |
          echo "${{ secrets.ENV }}" > .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Build project
        run: ./gradlew clean build -x test

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: true
        env:
          AWS_REGION: ap-northeast-2

      - name: Build & Push Docker image
        env:
          ECR_REGISTRY: 536697254327.dkr.ecr.ap-northeast-2.amazonaws.com
          ECR_REPOSITORY: talkpick-server
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            cd ~/TalkPick_Server_CICD_Test
            git fetch origin main
            git reset --hard origin/main           
            echo "${{ secrets.ENV }}" > .env
            
            # 🔑 ECR 로그인 추가
            aws ecr get-login-password --region ap-northeast-2 | \
              docker login --username AWS \
              --password-stdin 536697254327.dkr.ecr.ap-northeast-2.amazonaws.com
            
            docker-compose pull
            docker-compose up -d --pull always